import firebase from 'firebase/app';
import 'firebase/auth';
import 'firebase/firestore';
import store from '@/store';
import router from '@/router';

firebase.initializeApp({
  apiKey: 'AIzaSyASFdaT4_wPB0JDcTHzrDNdycB_3Gdl4to',
  authDomain: 'bonbon-id7.firebaseapp.com',
  projectId: 'bonbon-id7',
  storageBucket: 'bonbon-id7.appspot.com',
  messagingSenderId: '850517808848',
  appId: '1:850517808848:web:c212b8a887000301f0b0d5',
});

const db = firebase.firestore();
// When we have undefined properties such as IDs which are generated by Firestore, drop them
db.settings({ ignoreUndefinedProperties: true });
const auth = firebase.auth();
let userDoc = null;

auth.onAuthStateChanged(user => {
  store.updateUser(user);

  let unsubscribe;

  if (user) {
    if (router.currentRoute.value.name === 'SignIn') router.push('/');
    userDoc = db.collection('users').doc(user.uid);
    // Create a user record if it doesn't exist
    userDoc.set({}, { merge: true });
    // Subscribe to user's state changes and store unsubscribe function
    unsubscribe = userDoc.collection('receipts').onSnapshot(snapshot => {
      store.updateReceipts(snapshot.docs.map(doc => {
        return { ...doc.data(), id: doc.id };
      }));
    });
  } else {
    // Unsubscribe to user's state changes on sign out
    unsubscribe && unsubscribe();
    userDoc = null;
    router.push('/signin');
  }
});

export default firebase;

export { db, auth, userDoc };
